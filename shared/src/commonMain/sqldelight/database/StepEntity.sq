import kotlin.Boolean;

CREATE TABLE StepEntity (
    id TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    duration INTEGER NOT NULL,
    targetFunds REAL NOT NULL,
    totalFundsRaised REAL NOT NULL,
    currency TEXT NOT NULL ,
    planID TEXT NOT NULL,
    userID TEXT NOT NULL,
    isSponsored INTEGER AS Boolean NOT NULL DEFAULT 0,
    status TEXT NOT NULL,
    createdAt TEXT NOT NULL,
    updatedAt TEXT NOT NULL
);

upsertStepEntity:
INSERT OR REPLACE
INTO StepEntity
VALUES ?;

getStepEntityByID:
SELECT StepEntity.id,
       StepEntity.name,
       StepEntity.description,
       StepEntity.duration,
       (SELECT SUM(cost) FROM BudgetEntity WHERE BudgetEntity.stepID = StepEntity.id) AS targetFunds,
       StepEntity.totalFundsRaised,
       StepEntity.currency,
       StepEntity.planID,
       StepEntity.userID,
       StepEntity.isSponsored,
       StepEntity.status,
       StepEntity.createdAt,
       StepEntity.updatedAt
FROM StepEntity
WHERE id = :id;

getStepEntitiesForPlan:
SELECT StepEntity.id,
       StepEntity.name,
       StepEntity.description,
       StepEntity.duration,
       (SELECT SUM(cost) FROM BudgetEntity WHERE BudgetEntity.stepID = StepEntity.id) AS targetFunds,
       StepEntity.totalFundsRaised,
       StepEntity.currency,
       StepEntity.planID,
       StepEntity.userID,
       StepEntity.isSponsored,
       StepEntity.status,
       StepEntity.createdAt,
       StepEntity.updatedAt
FROM StepEntity
WHERE planID = :planID
ORDER BY createdAt ASC;

getPrecedingStepFor:
SELECT StepEntity.id,
       StepEntity.name,
       StepEntity.description,
       StepEntity.duration,
       (SELECT SUM(cost) FROM BudgetEntity WHERE BudgetEntity.stepID = StepEntity.id) AS targetFunds,
       StepEntity.totalFundsRaised,
       StepEntity.currency,
       StepEntity.planID,
       StepEntity.userID,
       StepEntity.isSponsored,
       StepEntity.status,
       StepEntity.createdAt,
       StepEntity.updatedAt
FROM StepEntity
WHERE createdAt < (
    SELECT createdAt
    FROM StepEntity
    WHERE id = ? AND planID = ?
)
ORDER BY createdAt DESC
LIMIT 1;

deleteStepEntity:
DELETE FROM StepEntity
WHERE id = :id;

deleteAll:
DELETE FROM StepEntity;