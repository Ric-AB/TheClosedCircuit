[versions]

agp = "8.1.4"
androidx-activityCompose = "1.7.2"
androidx-appcompat = "1.6.1"
androidx-composeCompiler = "1.5.13"
androidx-splash-screen = "1.0.1"
atomicfu = "0.17.3"
buildConfig = "3.1.0"
compose = "1.6.1"
compose-m3 = "1.3.0-beta03"
compose-uitooling = "1.5.1"
googleServices = "4.4.2"
koin = "3.4.2"
koin-compose = "3.4.5"
koin-compose-kmm = "1.0.3"
kotlin = "1.9.23"
kotlin-firebase-sdk = "1.13.0"
kotlin-inject = '0.6.1'
kotlinx-collections = "0.3.7"
kotlinx-coroutines = "1.7.3"
kotlinx-datetime = "0.4.0"
kotlinx-serialization = "1.5.1"
ksp = "1.9.23-1.0.20"
kstore = "0.7.1"
ktor = "2.3.10"
ktorfit = "1.13.0"
#ktorfit-compiler = '1.13.0'
landscapist-version = "2.3.3"
mokoResources = "0.23.0"
napier = "2.6.1"
rinku = "0.6.0"
sqlDelight = "2.0.0"
voyager = "1.0.0"
webview = "1.9.7"

[libraries]

androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-splash-screen = { module = "androidx.core:core-splashscreen", version.ref = "androidx-splash-screen" }
compose-m3 = { module = "androidx.compose.material3:material3", version.ref = "compose-m3" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-uitooling" }
firebase-analytics = { module = "dev.gitlive:firebase-analytics", version.ref = "kotlin-firebase-sdk" }
firebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "kotlin-firebase-sdk" }
firebase-crashlytics = { module = "dev.gitlive:firebase-crashlytics", version.ref = "kotlin-firebase-sdk" }
firebase-firestore = { module = "dev.gitlive:firebase-firestore", version.ref = "kotlin-firebase-sdk" }
firebase-messaging = { module = "dev.gitlive:firebase-messaging", version.ref = "kotlin-firebase-sdk" }
firebase-storage = { module = "dev.gitlive:firebase-storage", version.ref = "kotlin-firebase-sdk" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin-compose" }
koin-compose-kmm = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose-kmm" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
kotlinInject-compiler = { module = 'me.tatarka.inject:kotlin-inject-compiler-ksp', version.ref = 'kotlin-inject' }
kotlinx-collections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-collections" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
kstore-file = { module = "io.github.xxfast:kstore-file", version.ref = "kstore" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-logging = { module = 'io.ktor:ktor-client-logging', version.ref = 'ktor' }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-websocket = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktorfit = { module = "de.jensklingenberg.ktorfit:ktorfit-lib", version.ref = "ktorfit" }
ktorfit-ksp = { module = 'de.jensklingenberg.ktorfit:ktorfit-ksp', version.ref = 'ktorfit' }
landscapist-coil = { module = "com.github.skydoves:landscapist-coil3", version.ref = "landscapist-version" }
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "mokoResources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "mokoResources" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
rinku = { module = "dev.theolm:rinku", version.ref = "rinku" }
rinku-compose-ext = { module = "dev.theolm:rinku-compose-ext", version.ref = "rinku" }
sqldelight-androidDriver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight-jvmDriver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqldelight-nativeDriver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqldelight-primitiveAdapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqlDelight" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-screenModel = { module = "cafe.adriel.voyager:voyager-screenmodel", version.ref = "voyager" }
voyager-tab = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
webview-compose = { module = "io.github.kevinnzou:compose-webview-multiplatform", version.ref = "webview" }

[plugins]

android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version = "8.0.0" }
atomicfu = { id = "org.jetbrains.kotlinx.atomicfu-gradle-plugin", version.ref = "atomicfu" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
googleServices = { id = "com.google.gms.google-services", version.ref = "googleServices" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfit" }
mokoResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokoResources" }
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }

